"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from enum import Enum
from plaid import utils
from typing import Any, Dict, Optional

class StudentLoanStatusType(str, Enum):
    r"""The status type of the student loan"""
    CANCELLED = 'cancelled'
    CHARGED_OFF = 'charged off'
    CLAIM = 'claim'
    CONSOLIDATED = 'consolidated'
    DEFERMENT = 'deferment'
    DELINQUENT = 'delinquent'
    DISCHARGED = 'discharged'
    EXTENSION = 'extension'
    FORBEARANCE = 'forbearance'
    IN_GRACE = 'in grace'
    IN_MILITARY = 'in military'
    IN_SCHOOL = 'in school'
    NOT_FULLY_DISBURSED = 'not fully disbursed'
    OTHER = 'other'
    PAID_IN_FULL = 'paid in full'
    REFUNDED = 'refunded'
    REPAYMENT = 'repayment'
    TRANSFERRED = 'transferred'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StudentLoanStatus:
    r"""An object representing the status of the student loan"""
    end_date: Optional[date] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end_date'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat }})
    r"""The date until which the loan will be in its current status. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD)."""
    type: Optional[StudentLoanStatusType] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The status type of the student loan"""
    additional_properties: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'exclude': lambda f: f is None }})
    

