"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from .signalinsights import SignalInsights
from .transferauthorizationdecision import TransferAuthorizationDecision
from .transferauthorizationdecisionrationale import TransferAuthorizationDecisionRationale
from .transferauthorizationguaranteedecision import TransferAuthorizationGuaranteeDecision
from .transferauthorizationguaranteedecisionrationale import TransferAuthorizationGuaranteeDecisionRationale
from .transferauthorizationproposedtransfer import TransferAuthorizationProposedTransfer
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from plaid import utils
from typing import Any, Dict, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TransferAuthorization:
    r"""Contains the authorization decision for a proposed transfer."""
    UNSET='__SPEAKEASY_UNSET__'
    created: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    r"""The datetime representing when the authorization was created, in the format `2006-01-02T15:04:05Z`."""
    decision: TransferAuthorizationDecision = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('decision') }})
    r"""A decision regarding the proposed transfer.

    `approved` – The proposed transfer has received the end user's consent and has been approved for processing by Plaid. The `decision_rationale` field is set if Plaid was unable to fetch the account information. You may proceed with the transfer, but further review is recommended (i.e., use Link in update to re-authenticate your user when `decision_rationale.code` is `ITEM_LOGIN_REQUIRED`). Refer to the `code` field in the `decision_rationale` object for details.

    `declined` – Plaid reviewed the proposed transfer and declined processing. Refer to the `code` field in the `decision_rationale` object for details.
    """
    decision_rationale: Optional[TransferAuthorizationDecisionRationale] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('decision_rationale') }})
    r"""The rationale for Plaid's decision regarding a proposed transfer. It is always set for `declined` decisions, and may or may not be null for `approved` decisions."""
    guarantee_decision: Optional[TransferAuthorizationGuaranteeDecision] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('guarantee_decision') }})
    r"""Indicates whether the transfer is guaranteed by Plaid (Guarantee customers only). This field will contain either `GUARANTEED` or `NOT_GUARANTEED` indicating whether Plaid will guarantee the transfer. If the transfer is not guaranteed, additional information will be provided in the `guarantee_decision_rationale` field. Refer to the `code` field in `guarantee_decision_rationale` for details."""
    guarantee_decision_rationale: Optional[TransferAuthorizationGuaranteeDecisionRationale] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('guarantee_decision_rationale') }})
    r"""The rationale for Plaid's decision to not guarantee a transfer. Will be `null` unless `guarantee_decision` is `NOT_GUARANTEED`."""
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Plaid’s unique identifier for a transfer authorization."""
    proposed_transfer: TransferAuthorizationProposedTransfer = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('proposed_transfer') }})
    r"""Details regarding the proposed transfer."""
    additional_properties: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'exclude': lambda f: f is None }})
    signal_insights: Optional[SignalInsights] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('signal_insights'), 'exclude': lambda f: f is TransferAuthorization.UNSET }})
    r"""Signal insights including scores and attributes. This response is offered as an add-on to `/transfer/authorization/create`. To request access to these fields please contact your Plaid account manager."""
    

