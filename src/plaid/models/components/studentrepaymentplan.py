"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from plaid import utils
from typing import Any, Dict, Optional

class StudentRepaymentPlanType(str, Enum):
    r"""The type of the repayment plan."""
    EXTENDED_GRADUATED = 'extended graduated'
    EXTENDED_STANDARD = 'extended standard'
    GRADUATED = 'graduated'
    INCOME_CONTINGENT_REPAYMENT = 'income-contingent repayment'
    INCOME_BASED_REPAYMENT = 'income-based repayment'
    INTEREST_ONLY = 'interest-only'
    OTHER = 'other'
    PAY_AS_YOU_EARN = 'pay as you earn'
    REVISED_PAY_AS_YOU_EARN = 'revised pay as you earn'
    STANDARD = 'standard'
    LESS_THAN_NIL_GREATER_THAN_ = '<nil>'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StudentRepaymentPlan:
    r"""An object representing the repayment plan for the student loan"""
    description: Optional[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})
    r"""The description of the repayment plan as provided by the servicer."""
    type: Optional[StudentRepaymentPlanType] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of the repayment plan."""
    additional_properties: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'exclude': lambda f: f is None }})
    

