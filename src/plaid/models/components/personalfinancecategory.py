"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from plaid import utils
from typing import Any, Dict, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PersonalFinanceCategory:
    r"""Information describing the intent of the transaction. Most relevant for personal finance use cases, but not limited to such use cases.

    See the [`taxonomy csv file`](https://plaid.com/documents/transactions-personal-finance-category-taxonomy.csv) for a full list of personal finance categories.
    """
    detailed: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detailed') }})
    r"""A granular category conveying the transaction's intent. This field can also be used as a unique identifier for the category."""
    primary: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primary') }})
    r"""A high level category that communicates the broad category of the transaction."""
    additional_properties: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'exclude': lambda f: f is None }})
    confidence_level: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('confidence_level') }})
    r"""Note: This field is only available for `/transactions/enrich` endpoint currently.
    A description of how confident we are that the provided categories accurately describe the transaction intent.

    `VERY_HIGH`: We are more than 98% confident that this category reflects the intent of the transaction.
    `HIGH`: We are more than 90% confident that this category reflects the intent of the transaction.
    `MEDIUM`: We are moderately confident that this category reflects the intent of the transaction.
    `LOW`: This category may reflect the intent, but there may be other categories that are more accurate.
    `UNKNOWN`: Error
    """
    

