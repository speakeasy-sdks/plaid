"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .accountbalance import AccountBalance
from .accountsubtype import AccountSubtype
from .accounttype import AccountType
from .basereportaccountinsights import BaseReportAccountInsights
from .basereporttransaction import BaseReportTransaction
from .historicalbalance import HistoricalBalance
from .owner import Owner
from .ownershiptype import OwnershipType
from dataclasses_json import Undefined, dataclass_json
from plaid import utils
from typing import Any, Dict, List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BaseReportAccount:
    r"""Base Report information about an account"""
    balances: AccountBalance = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balances') }})
    r"""A set of fields describing the balance for an account. Balance information may be cached unless the balance object was returned by `/accounts/balance/get`."""
    days_available: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('days_available') }})
    r"""The duration of transaction history available for this Item, typically defined as the time since the date of the earliest transaction in that account. Only returned by Base Report endpoints."""
    historical_balances: List[HistoricalBalance] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('historical_balances') }})
    r"""Calculated data about the historical balances on the account. Only returned by Base Report endpoints and currently not supported by `brokerage` or `investment` accounts."""
    mask: Optional[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mask') }})
    r"""The last 2-4 alphanumeric characters of an account's official account number. Note that the mask may be non-unique between an Item's accounts, and it may also not match the mask that the bank displays to the user."""
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the account, either assigned by the user or by the financial institution itself"""
    official_name: Optional[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('official_name') }})
    r"""The official name of the account as given by the financial institution"""
    owners: List[Owner] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('owners') }})
    r"""Data returned by the financial institution about the account owner or owners. For business accounts, the name reported may be either the name of the individual or the name of the business, depending on the institution. Multiple owners on a single account will be represented in the same `owner` object, not in multiple owner objects within the array."""
    ownership_type: Optional[OwnershipType] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ownership_type') }})
    r"""How an asset is owned.

    `association`: Ownership by a corporation, partnership, or unincorporated association, including for-profit and not-for-profit organizations.
    `individual`: Ownership by an individual.
    `joint`: Joint ownership by multiple parties.
    `trust`: Ownership by a revocable or irrevocable trust.
    """
    subtype: Optional[AccountSubtype] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subtype') }})
    r"""See the [Account type schema](https://plaid.com/docs/api/accounts/#account-type-schema) for a full listing of account types and corresponding subtypes."""
    transactions: List[BaseReportTransaction] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactions') }})
    r"""Transaction history associated with the account. Only returned by Base Report endpoints. Transaction history returned by endpoints such as `/transactions/get` or `/investments/transactions/get` will be returned in the top-level `transactions` field instead."""
    type: AccountType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""`investment:` Investment account. In API versions 2018-05-22 and earlier, this type is called `brokerage` instead.

    `credit:` Credit card

    `depository:` Depository account

    `loan:` Loan account

    `other:` Non-specified account type

    See the [Account type schema](https://plaid.com/docs/api/accounts#account-type-schema) for a full listing of account types and corresponding subtypes.
    """
    additional_properties: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'exclude': lambda f: f is None }})
    account_insights: Optional[BaseReportAccountInsights] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_insights'), 'exclude': lambda f: f is None }})
    r"""Calculated insights derived from transaction-level data."""
    

