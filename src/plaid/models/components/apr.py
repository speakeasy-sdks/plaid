"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from plaid import utils
from typing import Any, Dict, Optional

class AprType(str, Enum):
    r"""The type of balance to which the APR applies."""
    BALANCE_TRANSFER_APR = 'balance_transfer_apr'
    CASH_APR = 'cash_apr'
    PURCHASE_APR = 'purchase_apr'
    SPECIAL = 'special'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Apr:
    r"""Information about the APR on the account."""
    apr_percentage: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('apr_percentage') }})
    r"""Annual Percentage Rate applied."""
    apr_type: AprType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('apr_type') }})
    r"""The type of balance to which the APR applies."""
    balance_subject_to_apr: Optional[float] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balance_subject_to_apr') }})
    r"""Amount of money that is subjected to the APR if a balance was carried beyond payment due date. How it is calculated can vary by card issuer. It is often calculated as an average daily balance."""
    interest_charge_amount: Optional[float] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('interest_charge_amount') }})
    r"""Amount of money charged due to interest from last statement."""
    additional_properties: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'exclude': lambda f: f is None }})
    

