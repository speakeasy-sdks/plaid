"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .basereportaverageflowinsights import BaseReportAverageFlowInsights
from .basereportlongestgapinsights import BaseReportLongestGapInsights
from .basereportnumberflowinsights import BaseReportNumberFlowInsights
from dataclasses_json import Undefined, dataclass_json
from plaid import utils
from typing import Any, Dict, List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BaseReportAccountInsights:
    r"""Calculated insights derived from transaction-level data."""
    additional_properties: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'exclude': lambda f: f is None }})
    average_days_between_transactions: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('average_days_between_transactions'), 'exclude': lambda f: f is None }})
    r"""Average number of days between sequential transactions"""
    average_inflow_amount: Optional[List[BaseReportAverageFlowInsights]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('average_inflow_amount') }})
    r"""Average amount of debit transactions into account. This field will be null for non-depository accounts. This field only takes into account USD transactions from the account."""
    average_outflow_amount: Optional[List[BaseReportAverageFlowInsights]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('average_outflow_amount') }})
    r"""Average amount of credit transactions into account. This field will be null for non-depository accounts. This field only takes into account USD transactions from the account."""
    days_available: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('days_available'), 'exclude': lambda f: f is None }})
    r"""Number of days days available in the base report for the account."""
    longest_gap_between_transactions: Optional[List[BaseReportLongestGapInsights]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('longest_gap_between_transactions'), 'exclude': lambda f: f is None }})
    r"""Longest gap between sequential transactions"""
    most_recent_transaction_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('most_recent_transaction_date'), 'exclude': lambda f: f is None }})
    r"""Date of the most recent transaction in the base report for the account."""
    number_of_days_no_transactions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number_of_days_no_transactions'), 'exclude': lambda f: f is None }})
    r"""Number of days with no transactions"""
    number_of_inflows: Optional[List[BaseReportNumberFlowInsights]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number_of_inflows') }})
    r"""The number of debits into the account. This field will be null for non-depository accounts."""
    number_of_outflows: Optional[List[BaseReportNumberFlowInsights]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number_of_outflows') }})
    r"""The number of credit into the account. This field will be null for non-depository accounts."""
    oldest_transaction_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oldest_transaction_date'), 'exclude': lambda f: f is None }})
    r"""Date of the earliest transaction in the base report for the account."""
    

