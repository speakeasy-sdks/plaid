"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .counterparty import Counterparty
from .location import Location
from .paymentchannel import PaymentChannel
from .personalfinancecategory import PersonalFinanceCategory
from dataclasses_json import Undefined, dataclass_json
from plaid import utils
from typing import Any, Dict, List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Enhancements:
    r"""A grouping of the Plaid produced transaction enhancement fields."""
    category: List[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('category') }})
    r"""A hierarchical array of the categories to which this transaction belongs. For a full list of categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget)."""
    category_id: Optional[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('category_id') }})
    r"""The ID of the category to which this transaction belongs. For a full list of categories, see [`/categories/get`](https://plaid.com/docs/api/products/transactions/#categoriesget)."""
    location: Location = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location') }})
    r"""A representation of where a transaction took place"""
    payment_channel: PaymentChannel = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payment_channel') }})
    r"""The channel used to make a payment.
    `online:` transactions that took place online.

    `in store:` transactions that were made at a physical location.

    `other:` transactions that relate to banks, e.g. fees or deposits.
    """
    additional_properties: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'exclude': lambda f: f is None }})
    check_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('check_number') }})
    r"""The check number of the transaction. This field is only populated for check transactions."""
    counterparties: Optional[List[Counterparty]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('counterparties'), 'exclude': lambda f: f is None }})
    r"""The counterparties present in the transaction. Counterparties, such as the merchant or the financial institution, are extracted by Plaid from the raw description."""
    logo_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logo_url') }})
    r"""The URL of a logo associated with this transaction, if available. The logo is formatted as a 100x100 pixel PNG file."""
    merchant_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('merchant_name') }})
    r"""The name of the primary counterparty, such as the merchant or the financial institution, as extracted by Plaid from the raw description."""
    personal_finance_category: Optional[PersonalFinanceCategory] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('personal_finance_category') }})
    r"""Information describing the intent of the transaction. Most relevant for personal finance use cases, but not limited to such use cases.

    See the [`taxonomy csv file`](https://plaid.com/documents/transactions-personal-finance-category-taxonomy.csv) for a full list of personal finance categories.
    """
    personal_finance_category_icon_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('personal_finance_category_icon_url'), 'exclude': lambda f: f is None }})
    r"""A link to the icon associated with the primary personal finance category. The logo will always be 100x100 pixels."""
    website: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('website') }})
    r"""The website associated with this transaction, if available."""
    

