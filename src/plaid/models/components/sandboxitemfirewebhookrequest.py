"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .webhooktype import WebhookType
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from plaid import utils
from typing import Optional

class WebhookCode(str, Enum):
    r"""The webhook codes that can be fired by this test endpoint."""
    DEFAULT_UPDATE = 'DEFAULT_UPDATE'
    NEW_ACCOUNTS_AVAILABLE = 'NEW_ACCOUNTS_AVAILABLE'
    AUTH_DATA_UPDATE = 'AUTH_DATA_UPDATE'
    RECURRING_TRANSACTIONS_UPDATE = 'RECURRING_TRANSACTIONS_UPDATE'
    SYNC_UPDATES_AVAILABLE = 'SYNC_UPDATES_AVAILABLE'
    PRODUCT_READY = 'PRODUCT_READY'
    ERROR = 'ERROR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SandboxItemFireWebhookRequest:
    r"""SandboxItemFireWebhookRequest defines the request schema for `/sandbox/item/fire_webhook`"""
    access_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access_token') }})
    r"""The access token associated with the Item data is being requested for."""
    webhook_code: WebhookCode = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webhook_code') }})
    r"""The webhook codes that can be fired by this test endpoint."""
    client_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_id'), 'exclude': lambda f: f is None }})
    r"""Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body."""
    secret: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('secret'), 'exclude': lambda f: f is None }})
    r"""Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."""
    webhook_type: Optional[WebhookType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webhook_type'), 'exclude': lambda f: f is None }})
    r"""The webhook types that can be fired by this test endpoint."""
    

