"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .riskcheckbehaviorbotdetectedlabel import RiskCheckBehaviorBotDetectedLabel
from .riskcheckbehaviorfraudringdetectedlabel import RiskCheckBehaviorFraudRingDetectedLabel
from .riskcheckbehavioruserinteractionslabel import RiskCheckBehaviorUserInteractionsLabel
from dataclasses_json import Undefined, dataclass_json
from plaid import utils
from typing import Any, Dict, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RiskCheckBehavior:
    r"""Result summary object specifying values for `behavior` attributes of risk check, when available."""
    UNSET='__SPEAKEASY_UNSET__'
    bot_detected: RiskCheckBehaviorBotDetectedLabel = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bot_detected') }})
    r"""Field describing the outcome of a bot detection behavior risk check.

    `yes` indicates that automated activity was detected.

    `no` indicates that automated activity was not detected.

    `no_data` indicates there was not enough information available to give an accurate signal.
    """
    fraud_ring_detected: RiskCheckBehaviorFraudRingDetectedLabel = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fraud_ring_detected') }})
    r"""Field describing the outcome of a fraud ring behavior risk check.

    `yes` indicates that fraud ring activity was detected.

    `no` indicates that fraud ring activity was not detected.

    `no_data` indicates there was not enough information available to give an accurate signal.
    """
    user_interactions: RiskCheckBehaviorUserInteractionsLabel = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_interactions') }})
    r"""Field describing the overall user interaction signals of a behavior risk check. This value represents how familiar the user is with the personal data they provide, based on a number of signals that are collected during their session.

    `genuine` indicates the user has high familiarity with the data they are providing, and that fraud is unlikely.

    `neutral` indicates some signals are present in between `risky` and `genuine`, but there are not enough clear signals to determine an outcome.

    `risky` indicates the user has low familiarity with the data they are providing, and that fraud is likely.

    `no_data` indicates there is not sufficient information to give an accurate signal.
    """
    additional_properties: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'exclude': lambda f: f is None }})
    

