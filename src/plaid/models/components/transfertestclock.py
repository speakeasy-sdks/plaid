"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from plaid import utils
from typing import Any, Dict, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TransferTestClock:
    r"""Defines the test clock for a transfer."""
    test_clock_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('test_clock_id') }})
    r"""Plaidâ€™s unique identifier for a test clock."""
    virtual_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('virtual_time'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    r"""The virtual timestamp on the test clock. This will be of the form `2006-01-02T15:04:05Z`."""
    additional_properties: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'exclude': lambda f: f is None }})
    

