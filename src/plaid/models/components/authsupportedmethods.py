"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from plaid import utils
from typing import Any, Dict, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AuthSupportedMethods:
    r"""Metadata specifically related to which auth methods an institution supports."""
    UNSET='__SPEAKEASY_UNSET__'
    automated_micro_deposits: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('automated_micro_deposits') }})
    r"""Indicates if automated microdeposits are supported."""
    instant_auth: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instant_auth') }})
    r"""Indicates if instant auth is supported."""
    instant_match: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instant_match') }})
    r"""Indicates if instant match is supported."""
    additional_properties: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'exclude': lambda f: f is None }})
    

