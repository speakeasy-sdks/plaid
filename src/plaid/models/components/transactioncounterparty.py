"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .counterpartytype import CounterpartyType
from dataclasses_json import Undefined, dataclass_json
from plaid import utils
from typing import Any, Dict, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TransactionCounterparty:
    r"""The counterparty, such as the merchant or financial institution, is extracted by Plaid from the raw description."""
    UNSET='__SPEAKEASY_UNSET__'
    logo_url: Optional[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logo_url') }})
    r"""The URL of a logo associated with the counterparty, if available. The logo is formatted as a 100x100 pixel PNG filepath."""
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the counterparty, such as the merchant or the financial institution, as extracted by Plaid from the raw description."""
    type: CounterpartyType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The counterparty type.

    `merchant`: a provider of goods or services for purchase
    `financial_institution`: a financial entity (bank, credit union, BNPL, fintech)
    `payment_app`: a transfer or P2P app (e.g. Zelle)
    `marketplace`: a marketplace (e.g DoorDash, Google Play Store)
    `payment_terminal`: a point-of-sale payment terminal (e.g Square, Toast)
    `income_source`: the payer in an income transaction (e.g., an employer, client, or government agency)
    """
    website: Optional[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('website') }})
    r"""The website associated with the counterparty."""
    additional_properties: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'exclude': lambda f: f is None }})
    

