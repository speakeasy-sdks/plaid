"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from plaid import utils
from typing import Any, Dict, Optional

class PhoneNumberType(str, Enum):
    r"""The type of phone number."""
    HOME = 'home'
    WORK = 'work'
    OFFICE = 'office'
    MOBILE = 'mobile'
    MOBILE1 = 'mobile1'
    OTHER = 'other'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PhoneNumber:
    r"""A phone number"""
    data: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data') }})
    r"""The phone number."""
    primary: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primary') }})
    r"""When `true`, identifies the phone number as the primary number on an account."""
    type: PhoneNumberType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of phone number."""
    additional_properties: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'exclude': lambda f: f is None }})
    

