"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .creditcardliability import CreditCardLiability
from .mortgageliability import MortgageLiability
from .studentloan import StudentLoan
from dataclasses_json import Undefined, dataclass_json
from plaid import utils
from typing import Any, Dict, List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LiabilitiesObject:
    r"""An object containing liability accounts"""
    UNSET='__SPEAKEASY_UNSET__'
    credit: Optional[List[CreditCardLiability]] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('credit') }})
    r"""The credit accounts returned."""
    mortgage: Optional[List[MortgageLiability]] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mortgage') }})
    r"""The mortgage accounts returned."""
    student: Optional[List[StudentLoan]] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('student') }})
    r"""The student loan accounts returned."""
    additional_properties: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'exclude': lambda f: f is None }})
    

