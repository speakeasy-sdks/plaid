"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from plaid import utils
from typing import Any, Dict, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TransferExpectedSweepSettlementScheduleItem:
    r"""Defines an expected sweep date and amount."""
    sweep_settlement_date: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sweep_settlement_date'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat }})
    r"""The settlement date of a sweep for this transfer."""
    swept_settled_amount: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('swept_settled_amount') }})
    r"""The accumulated amount that has been swept by `sweep_settlement_date`."""
    additional_properties: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'exclude': lambda f: f is None }})
    

