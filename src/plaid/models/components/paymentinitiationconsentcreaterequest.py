"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .externalpaymentinitiationconsentoptions import ExternalPaymentInitiationConsentOptions
from .paymentinitiationconsentconstraints import PaymentInitiationConsentConstraints
from .paymentinitiationconsentscope import PaymentInitiationConsentScope
from dataclasses_json import Undefined, dataclass_json
from plaid import utils
from typing import List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaymentInitiationConsentCreateRequest:
    r"""PaymentInitiationConsentCreateRequest defines the request schema for `/payment_initiation/consent/create`"""
    UNSET='__SPEAKEASY_UNSET__'
    constraints: PaymentInitiationConsentConstraints = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('constraints') }})
    r"""Limitations that will be applied to payments initiated using the payment consent."""
    recipient_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recipient_id') }})
    r"""The ID of the recipient the payment consent is for. The created consent can be used to transfer funds to this recipient only."""
    reference: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reference') }})
    r"""A reference for the payment consent. This must be an alphanumeric string with at most 18 characters and must not contain any special characters."""
    scopes: List[PaymentInitiationConsentScope] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scopes') }})
    r"""An array of payment consent scopes."""
    client_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_id'), 'exclude': lambda f: f is None }})
    r"""Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body."""
    options: Optional[ExternalPaymentInitiationConsentOptions] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options'), 'exclude': lambda f: f is PaymentInitiationConsentCreateRequest.UNSET }})
    r"""Additional payment consent options"""
    secret: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('secret'), 'exclude': lambda f: f is None }})
    r"""Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."""
    

