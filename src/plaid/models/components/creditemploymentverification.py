"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .creditemployerverification import CreditEmployerVerification
from .creditplatformids import CreditPlatformIds
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from plaid import utils
from typing import Any, Dict, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreditEmploymentVerification:
    r"""The object containing proof of employment data for an individual."""
    UNSET='__SPEAKEASY_UNSET__'
    account_id: Optional[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_id') }})
    r"""ID of the payroll provider account."""
    employee_type: Optional[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employee_type') }})
    r"""The type of employment for the individual.
    `\"FULL_TIME\"`: A full-time employee.
    `\"PART_TIME\"`: A part-time employee.
    `\"CONTRACTOR\"`: An employee typically hired externally through a contracting group.
    `\"TEMPORARY\"`: A temporary employee.
    `\"OTHER\"`: The employee type is not one of the above defined types.
    """
    employer: CreditEmployerVerification = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employer') }})
    r"""An object containing employer data."""
    end_date: Optional[date] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end_date'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat }})
    r"""End of employment, if applicable. Provided in ISO 8601 format (YYY-MM-DD)."""
    last_paystub_date: Optional[date] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_paystub_date'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat }})
    r"""The date of the employee's most recent paystub in ISO 8601 format (YYYY-MM-DD)."""
    platform_ids: CreditPlatformIds = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('platform_ids') }})
    r"""The object containing a set of ids related to an employee."""
    start_date: Optional[date] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat }})
    r"""Start of employment in ISO 8601 format (YYYY-MM-DD)."""
    status: Optional[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""Current employment status."""
    title: Optional[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})
    r"""Current title of employee."""
    additional_properties: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'exclude': lambda f: f is None }})
    

