"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .creditdocumentmetadata import CreditDocumentMetadata
from .creditpaystubdeductions import CreditPayStubDeductions
from .creditpaystubearnings import CreditPayStubEarnings
from .creditpaystubemployee import CreditPayStubEmployee
from .creditpaystubemployer import CreditPayStubEmployer
from .creditpaystubnetpay import CreditPayStubNetPay
from .paystubpayperioddetails import PayStubPayPeriodDetails
from dataclasses_json import Undefined, dataclass_json
from plaid import utils
from typing import Any, Dict, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreditPayStub:
    r"""An object representing an end user's pay stub."""
    deductions: CreditPayStubDeductions = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deductions') }})
    r"""An object with the deduction information found on a pay stub."""
    document_id: Optional[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('document_id') }})
    r"""An identifier of the document referenced by the document metadata."""
    document_metadata: CreditDocumentMetadata = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('document_metadata') }})
    r"""Object representing metadata pertaining to the document."""
    earnings: CreditPayStubEarnings = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('earnings') }})
    r"""An object representing both a breakdown of earnings on a pay stub and the total earnings."""
    employee: CreditPayStubEmployee = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employee') }})
    r"""Data about the employee."""
    employer: CreditPayStubEmployer = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employer') }})
    r"""Information about the employer on the pay stub."""
    net_pay: CreditPayStubNetPay = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('net_pay') }})
    r"""An object representing information about the net pay amount on the pay stub."""
    pay_period_details: PayStubPayPeriodDetails = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pay_period_details') }})
    r"""Details about the pay period."""
    additional_properties: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'exclude': lambda f: f is None }})
    

