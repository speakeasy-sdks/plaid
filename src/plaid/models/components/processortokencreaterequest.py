"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from plaid import utils
from typing import Optional

class Processor(str, Enum):
    r"""The processor you are integrating with."""
    DWOLLA = 'dwolla'
    GALILEO = 'galileo'
    MODERN_TREASURY = 'modern_treasury'
    OCROLUS = 'ocrolus'
    PRIME_TRUST = 'prime_trust'
    VESTA = 'vesta'
    DRIVEWEALTH = 'drivewealth'
    VOPAY = 'vopay'
    ACHQ = 'achq'
    CHECK = 'check'
    CHECKBOOK = 'checkbook'
    CIRCLE = 'circle'
    SILA_MONEY = 'sila_money'
    RIZE = 'rize'
    SVB_API = 'svb_api'
    UNIT = 'unit'
    WYRE = 'wyre'
    LITHIC = 'lithic'
    ALPACA = 'alpaca'
    ASTRA = 'astra'
    MOOV = 'moov'
    TREASURY_PRIME = 'treasury_prime'
    MARQETA = 'marqeta'
    CHECKOUT = 'checkout'
    SOLID = 'solid'
    HIGHNOTE = 'highnote'
    GEMINI = 'gemini'
    APEX_CLEARING = 'apex_clearing'
    GUSTO = 'gusto'
    ADYEN = 'adyen'
    ATOMIC = 'atomic'
    I2C = 'i2c'
    WEPAY = 'wepay'
    RISKIFIED = 'riskified'
    UTB = 'utb'
    ADP_ROLL = 'adp_roll'
    FORTRESS_TRUST = 'fortress_trust'
    BOND = 'bond'
    BAKKT = 'bakkt'
    TEAL = 'teal'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProcessorTokenCreateRequest:
    r"""ProcessorTokenCreateRequest defines the request schema for `/processor/token/create`"""
    access_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access_token') }})
    r"""The access token associated with the Item data is being requested for."""
    account_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_id') }})
    r"""The `account_id` value obtained from the `onSuccess` callback in Link"""
    processor: Processor = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('processor') }})
    r"""The processor you are integrating with."""
    client_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_id'), 'exclude': lambda f: f is None }})
    r"""Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body."""
    secret: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('secret'), 'exclude': lambda f: f is None }})
    r"""Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."""
    

