"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .sandboxbankincomewebhookfirerequestwebhookcode import SandboxBankIncomeWebhookFireRequestWebhookCode
from .sandboxbankincomewebhookfirerequestwebhookfields import SandboxBankIncomeWebhookFireRequestWebhookFields
from dataclasses_json import Undefined, dataclass_json
from plaid import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SandboxBankIncomeFireWebhookRequest:
    r"""SandboxBankIncomeFireWebhookRequest defines the request schema for `/sandbox/bank_income/fire_webhook`"""
    webhook_code: SandboxBankIncomeWebhookFireRequestWebhookCode = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webhook_code') }})
    r"""The webhook codes this endpoint can be used to test"""
    webhook_fields: SandboxBankIncomeWebhookFireRequestWebhookFields = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webhook_fields') }})
    r"""Optional fields which will be populated in the simulated webhook"""
    client_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_id'), 'exclude': lambda f: f is None }})
    r"""Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body."""
    secret: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('secret'), 'exclude': lambda f: f is None }})
    r"""Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body."""
    webhook_override: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webhook_override'), 'exclude': lambda f: f is None }})
    r"""The URL to which the webhook should be sent. If provided, this will override the URL set in the dashboard."""
    

