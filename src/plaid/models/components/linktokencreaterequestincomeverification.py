"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .incomeverificationsourcetype import IncomeVerificationSourceType
from .linktokencreaterequestincomeverificationbankincome import LinkTokenCreateRequestIncomeVerificationBankIncome
from .linktokencreaterequestincomeverificationpayrollincome import LinkTokenCreateRequestIncomeVerificationPayrollIncome
from .linktokencreaterequestuserstatedincomesource import LinkTokenCreateRequestUserStatedIncomeSource
from dataclasses_json import Undefined, dataclass_json
from plaid import utils
from typing import List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LinkTokenCreateRequestIncomeVerification:
    r"""Specifies options for initializing Link for use with the Income product. This field is required if `income_verification` is included in the `products` array."""
    access_tokens: Optional[List[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access_tokens'), 'exclude': lambda f: f is None }})
    r"""An array of access tokens corresponding to Items that a user has previously connected with. Data from these institutions will be cross-referenced with document data received during the Document Income flow to help verify that the uploaded documents are accurate. If the `transactions` product was not initialized for these Items during link, it will be initialized after this Link session.

    This field should only be used with the `payroll` income source type.
    """
    asset_report_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('asset_report_id'), 'exclude': lambda f: f is None }})
    r"""The `asset_report_id` of an asset report associated with the user, as provided by `/asset_report/create`. Providing an `asset_report_id` is optional and can be used to verify the user through a streamlined flow. If provided, the bank linking flow will be skipped."""
    bank_income: Optional[LinkTokenCreateRequestIncomeVerificationBankIncome] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bank_income'), 'exclude': lambda f: f is None }})
    r"""Specifies options for initializing Link for use with Bank Income. This field is required if `income_verification` is included in the `products` array and `bank` is specified in `income_source_types`."""
    income_source_types: Optional[List[IncomeVerificationSourceType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('income_source_types'), 'exclude': lambda f: f is None }})
    r"""The types of source income data that users will be permitted to share. Options include `bank` and `payroll`. Currently you can only specify one of these options."""
    income_verification_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('income_verification_id'), 'exclude': lambda f: f is None }})
    r"""The `income_verification_id` of the verification instance, as provided by `/income/verification/create`.

    Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
    """
    payroll_income: Optional[LinkTokenCreateRequestIncomeVerificationPayrollIncome] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payroll_income'), 'exclude': lambda f: f is None }})
    r"""Specifies options for initializing Link for use with Payroll Income (including Document Income). Further customization options for Document Income, such as customizing which document types may be uploaded, are also available via the [Link Customization pane](https://dashboard.plaid.com/link) in the Dashboard. (Requires Production enablement.)"""
    precheck_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('precheck_id'), 'exclude': lambda f: f is None }})
    r"""The ID of a precheck created with `/income/verification/precheck`. Will be used to improve conversion of the income verification flow by streamlining the Link interface presented to the end user."""
    stated_income_sources: Optional[List[LinkTokenCreateRequestUserStatedIncomeSource]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stated_income_sources'), 'exclude': lambda f: f is None }})
    r"""A list of user stated income sources"""
    

