"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .selfieanalysis import SelfieAnalysis
from .selfiecapture import SelfieCapture
from .selfiestatus import SelfieStatus
from dataclasses_json import Undefined, dataclass_json
from plaid import utils
from typing import Any, Dict, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SelfieCheckSelfie:
    r"""Captures and analysis from a user's selfie."""
    UNSET='__SPEAKEASY_UNSET__'
    analysis: SelfieAnalysis = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('analysis') }})
    r"""High level descriptions of how the associated selfie was processed. If a selfie fails verification, the details in the `analysis` object should help clarify why the selfie was rejected."""
    attempt: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attempt') }})
    r"""The `attempt` field begins with 1 and increments with each subsequent selfie upload."""
    capture: SelfieCapture = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('capture') }})
    r"""The image or video capture of a selfie. Only one of image or video URL will be populated per selfie."""
    status: SelfieStatus = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""An outcome status for this specific selfie. Distinct from the overall `selfie_check.status` that summarizes the verification outcome from one or more selfies."""
    additional_properties: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'exclude': lambda f: f is None }})
    

